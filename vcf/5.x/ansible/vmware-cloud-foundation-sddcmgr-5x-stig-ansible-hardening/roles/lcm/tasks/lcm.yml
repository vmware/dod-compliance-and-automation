---
# Ansible Playbook for VMware Cloud Foundation 5.x SDDC Manager LCM Service STIG Readiness Guide

# Backup files that may be modified in case restoration is needed
- name: Backup files that may be modified in case restoration is needed
  tags: [always, backup]
  when: run_create_backups | bool
  block:
    - name: Backup files - Create time stamp
      ansible.builtin.set_fact:
        backup_timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}"

    - name: Backup files - If restoring be sure to restore permissions that original file had!!
      ansible.builtin.copy:
        remote_src: true
        src: "{{ item }}"
        dest: "/tmp/ansible-backups-vcf-lcm-{{ backup_timestamp }}/"
        mode: preserve
      changed_when: false
      register: backupresult
      failed_when:
        - backupresult.msg is defined
        - "'not found' not in backupresult.msg"
      with_items:
        - '{{ var_app_properties_path }}'
        - '{{ var_app_prod_properties_path }}'
        - '{{ var_rsyslog_conf_path }}'

###################################################################################################################################
- name: CFLM-5X-000025
  tags: [CFLM-5X-000025]
  when: run_log_files_permissions | bool
  block:
    - name: CFLM-5X-000025 - Find logs with incorrect permissions
      ansible.builtin.shell: find {{ var_log_dir }} -xdev -type f -a '(' -perm -o+w -o -not -user {{ var_log_owner }} -o -not -group {{ var_log_group }} ')';
      register: files
      changed_when: files.stdout != ""

    - name: CFLM-5X-000025 - Update permissions on log files found to be incorrect
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: '{{ var_log_owner }}'
        group: '{{ var_log_group }}'
        mode: o-w
      with_items: "{{ files.stdout_lines }}"
      when:
        - files.stdout != ""

###################################################################################################################################
- name: CFLM-5X-000031
  tags: [CFLM-5X-000031]
  when: run_rsyslog_conf | bool
  block:
    - name: CFLM-5X-000031 - Configure rsyslog conf
      ansible.builtin.template:
        src: '{{ var_rsyslog_conf_name }}'
        dest: '/etc/rsyslog.d/{{ var_rsyslog_conf_name }}'
        owner: root
        group: root
        mode: '0640'
        force: true
      notify:
        - restart rsyslog

###################################################################################################################################
- name: CFLM-5X-000034
  tags: [CFLM-5X-000034]
  when: run_app_files_permissions | bool
  block:
    - name: CFLM-5X-000034 - Find files with incorrect permissions
      ansible.builtin.shell: find {{ var_app_dir }} -xdev -type f -a '(' -perm -o+w -o -not -user {{ var_app_owner }} -o -not -group {{ var_app_group }} ')';
      register: files
      changed_when: files.stdout != ""

    - name: CFLM-5X-000034 - Update permissions on app files found to be incorrect
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: '{{ var_log_owner }}'
        group: '{{ var_log_group }}'
        mode: o-w
      with_items: "{{ files.stdout_lines }}"
      when:
        - files.stdout != ""

###################################################################################################################################
- name: CFLM-5X-000065
  tags: [CFLM-5X-000065]
  when: run_uri_encoding | bool
  block:
    - name: CFLM-5X-000065 - Update server.tomcat.uri-encoding in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.tomcat\.uri-encoding=.*$'
        line: server.tomcat.uri-encoding=UTF-8
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000088
  tags: [CFLM-5X-000088]
  when: run_app_conf_permissions | bool
  block:
    - name: CFLM-5X-000088 - Find files with incorrect permissions
      ansible.builtin.shell: find {{ var_app_conf_dir }} -xdev -type f -a '(' -perm /177 -o -not -user {{ var_app_owner }} -o -not -group {{ var_app_group }} ')';
      register: files
      changed_when: files.stdout != ""

    - name: CFLM-5X-000088 - Update permissions on app files found to be incorrect
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: '{{ var_log_owner }}'
        group: '{{ var_log_group }}'
        mode: '0600'
      with_items: "{{ files.stdout_lines }}"
      when:
        - files.stdout != ""

###################################################################################################################################
- name: CFLM-5X-000124
  tags: [CFLM-5X-000124]
  when: run_server_address | bool
  block:
    - name: CFLM-5X-000124 - Update server.address in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.address=.*$'
        line: 'server.address={{ var_server_address }}'
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000125
  tags: [CFLM-5X-000125]
  when: run_server_port | bool
  block:
    - name: CFLM-5X-000125 - Update server.port in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.port=.*$'
        line: 'server.port={{ var_server_port }}'
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000126
  tags: [CFLM-5X-000126]
  when: run_servlet_jsp_init_parameters_listings | bool
  block:
    - name: CFLM-5X-000126 - Update server.servlet.jsp.init-parameters.listings in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.servlet\.jsp\.init-parameters\.listings=.*$'
        line: server.servlet.jsp.init-parameters.listings=false
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000127
  tags: [CFLM-5X-000127]
  when: run_server_error_whitelabel_enabled | bool
  block:
    - name: CFLM-5X-000127 - Update server.error.whitelabel.enabled in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.error\.whitelabel\.enabled=.*$'
        line: server.error.whitelabel.enabled=false
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000128
  tags: [CFLM-5X-000128]
  when: run_server_error_include_stacktrace | bool
  block:
    - name: CFLM-5X-000128 - Update server.error.include-stacktrace in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.error\.include-stacktrace=.*$'
        line: server.error.include-stacktrace=never
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000129
  tags: [CFLM-5X-000129]
  when: run_servlet_jsp_init_parameters_debug | bool
  block:
    - name: CFLM-5X-000129 - Update server.servlet.jsp.init-parameters.debug in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.servlet\.jsp\.init-parameters\.debug=.*$'
        line: server.servlet.jsp.init-parameters.debug=0
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000130
  tags: [CFLM-5X-000130]
  when: run_server_header | bool
  block:
    - name: CFLM-5X-000130 - Update server.server-header in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^server\.server-header.*$'
        line: server.server-header=
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}

###################################################################################################################################
- name: CFLM-5X-000131
  tags: [CFLM-5X-000131]
  when: run_management_endpoint_shutdown_enabled | bool
  block:
    - name: CFLM-5X-000131 - Update management.endpoint.shutdown.enabled in application-prod.properties
      ansible.builtin.lineinfile:
        path: '{{ var_app_prod_properties_path }}'
        state: present
        regexp: '^management\.endpoint\.shutdown\.enabled=.*$'
        line: management.endpoint.shutdown.enabled=false
        firstmatch: true
      notify:
        - restart {{ var_notify_service_name }}
