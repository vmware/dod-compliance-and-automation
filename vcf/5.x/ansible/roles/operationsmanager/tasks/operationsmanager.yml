---
# Ansible Playbook for VMware Cloud Foundation 5.x SDDC Manager Operations Manager Service STIG Readiness Guide

# Backup files that may be modified in case restoration is needed
- name: Backup files that may be modified in case restoration is needed
  tags: [always, backup]
  when: run_create_backups | bool
  block:
    - name: Backup files - Create time stamp
      ansible.builtin.set_fact:
        backup_timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}"

    - name: Backup files - If restoring be sure to restore permissions that original file had!!
      ansible.builtin.copy:
        remote_src: true
        src: "{{ item }}"
        dest: "/tmp/ansible-backups-vcf-operationsmanager-{{ backup_timestamp }}/"
        mode: preserve
      changed_when: false
      register: backupresult
      failed_when:
        - backupresult.msg is defined
        - "'not found' not in backupresult.msg"
      with_items:
        - '{{ var_app_properties_path }}'
        - '{{ var_app_prod_properties_path }}'
        - '{{ var_rsyslog_conf_path }}'

###################################################################################################################################
- name: CFOM-5X-000025
  tags: [CFOM-5X-000025]
  when: run_log_files_permissions | bool
  block:
    - name: CFOM-5X-000025 - Find logs with incorrect permissions
      ansible.builtin.shell: find {{ var_log_dir }} -xdev -type f -a '(' -perm -o+w -o -not -user {{ var_log_owner }} -o -not -group {{ var_log_group }} ')';
      register: files
      changed_when: files.stdout != ""

    - name: CFOM-5X-000025 - Update permissions on log files found to be incorrect
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: '{{ var_log_owner }}'
        group: '{{ var_log_group }}'
        mode: o-w
      with_items: "{{ files.stdout_lines }}"
      when:
        - files.stdout != ""

###################################################################################################################################
- name: CFOM-5X-000031
  tags: [CFOM-5X-000031]
  when: run_rsyslog_conf | bool
  block:
    - name: CFOM-5X-000031 - Configure rsyslog conf
      ansible.builtin.template:
        src: '{{ var_rsyslog_conf_name }}'
        dest: '/etc/rsyslog.d/{{ var_rsyslog_conf_name }}'
        owner: root
        group: root
        mode: '0640'
        force: true
      notify:
        - restart rsyslog

###################################################################################################################################
- name: CFOM-5X-000034
  tags: [CFOM-5X-000034]
  when: run_app_files_permissions | bool
  block:
    - name: CFOM-5X-000034 - Find files with incorrect permissions
      ansible.builtin.shell: find {{ var_app_dir }} -xdev -type f -a '(' -perm -o+w -o -not -user {{ var_app_owner }} -o -not -group {{ var_app_group }} ')';
      register: files
      changed_when: files.stdout != ""

    - name: CFOM-5X-000034 - Update permissions on app files found to be incorrect
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: '{{ var_log_owner }}'
        group: '{{ var_log_group }}'
        mode: o-w
      with_items: "{{ files.stdout_lines }}"
      when:
        - files.stdout != ""

###################################################################################################################################
- name: CFOM-5X-000088
  tags: [CFOM-5X-000088]
  when: run_app_conf_permissions | bool
  block:
    - name: CFOM-5X-000088 - Find files with incorrect permissions
      ansible.builtin.shell: find {{ var_app_conf_dir }} -xdev ! -name vcf-operations-manager.conf -type f -a '(' -perm /177 -o -not -user {{ var_app_owner }} -o -not -group {{ var_app_group }} ')';
      register: files
      changed_when: files.stdout != ""

    - name: CFOM-5X-000088 - Update permissions on app files found to be incorrect
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: '{{ var_log_owner }}'
        group: '{{ var_log_group }}'
        mode: '0600'
      with_items: "{{ files.stdout_lines }}"
      when:
        - files.stdout != ""
