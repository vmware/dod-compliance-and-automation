#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:assert", "assert")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:data", "data")

#@ if data.values.ENABLE_COMPLIANCE_SERVING_CERTS:
#@overlay/match by=overlay.subset({"kind":"KubeadmConfigTemplate"}),expects="1+"
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
           #@overlay/match missing_ok=True
           client-ca-file: "/etc/kubernetes/pki/ca.crt"
           #@overlay/match missing_ok=True
           feature-gates: "RotateKubeletServerCertificate=true"
           #@overlay/match missing_ok=True
           rotate-server-certificates: "true"
#@overlay/match missing_ok=True,by=overlay.subset({"kind":"KubeadmControlPlane"})
---
spec:
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          #@overlay/match missing_ok=True
          client-ca-file: "/etc/kubernetes/pki/ca.crt"
          #@overlay/match missing_ok=True
          rotate-server-certificates: "true"
          #@overlay/match missing_ok=True
          feature-gates: "RotateKubeletServerCertificate=true"
    clusterConfiguration:
      controllerManager:
        extraArgs:
          #@overlay/match missing_ok=True
          feature-gates: "RotateKubeletServerCertificate=true"
      apiServer:
        extraArgs:
          #@overlay/match missing_ok=True
          kubelet-certificate-authority: "/etc/kubernetes/pki/ca.crt"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          #@overlay/match missing_ok=True
          client-ca-file: "/etc/kubernetes/pki/ca.crt"
          #@overlay/match missing_ok=True
          rotate-server-certificates: "true"
          #@overlay/match missing_ok=True
          feature-gates: "RotateKubeletServerCertificate=true"
#@ end
